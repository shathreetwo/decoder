드디어 앱을 스토어에 업로드했다.
앱을 올리려고 시도하는 동안 오류를 해결하는 게 정말 쉽지 않았다.
서명이 없다는 오류는 키 파일을 직접 만들어 서명하니 금방 해결됐지만,
버전이 맞지 않다는 오류는 정말 고생을 많이 했다.
설정에서 아무리 바꿔도 빌드할 때마다 API 31로 바뀌어서 시간을 많이 허비했다.
빌드를 초기화하고 다시 하면 기본 20분은 걸리는데, 네트워크 오류까지 나면 더 오래 걸렸다.
우여곡절 끝에 결국 모든 문제를 해결하고 무사히 앱을 업로드할 수 있었다.

버튼에 전면 광고를 넣었는데, 누를 때마다 강제로 동영상 광고가 재생돼서 매우 불쾌했다.
심지어 닫기 버튼(X)도 없어서 끝까지 억지로 봐야만 했다.
내가 원했던 방식은 이미지 광고가 뜨고, 오른쪽 위에 X 버튼을 눌러 닫을 수 있는 형태였다.

광고 단위 설정에서 광고 유형을 선택할 수 있다는 걸 알게 됐다.
동영상 항목의 체크를 해제하니, 내가 원했던 이미지 광고가 제대로 나왔다.

비공개 테스트를 진행해야 해서 광고 노출 빈도를 ‘하루 1회’로 설정했다.

현재는 카페에 게시글을 올려 테스터를 모으는 중이다.
대행 업체가 5만 원에 대신 해주는 서비스도 있다는데, 왜 이렇게 복잡하게 만들어놨는지 모르겠다.
게다가 14일 동안 매일 한 번씩 접속해야 한다니 참 번거롭다.
혹시 모를 상황을 대비해서 20명보다 더 많은 테스터를 모집해두는 게 좋겠다.

----------

안녕하세요. 품앗이 신청합니다! 
제 이메일 추가해주시면 바로 설치하겠습니다.

Android : https://play.google.com/store/apps/details?id=org.encrycode.encrycode
웹 : https://play.google.com/apps/testing/org.encrycode.encrycode
이메일 : junwonchoe154@gmail.com

----------
2025-05-02(금)
평문,암호문 입력창이 칸 여유가 있는데도 한줄로만 나오는 문제.

광고+ 주석x 버전은 pc에서 하기 어려워서 일반 버전으로 수정하고 이식할 예정. 
해결 완료. 

TextInput 속성
multiline=false를 multiline=True        # 여러 줄 입력 가능
로 수정하면 된다.

이식완료.
----------
개선사항 

1. 로비 화면 개선
현재 로비 화면이 너무 휑하다.
로비 이미지 추가를 고려 중이며,
기존 ‘비밀 해독기’ 로고를 ‘암호 해독기’로 바꿀까 고민했지만,
결국 ‘비밀 해독기’가 더 멋있어서 그대로 사용하기로 했다.
다만 이미지의 배경색이 전체 배경과 완전히 어울리지는 않지만,
우선 APK로 빌드해 모바일 환경에서 직접 확인해볼 예정이다.

완료.

2. 메모장 기능 추가
암호화한 내용을 기록하거나, 적의 정보를 메모할 수 있는
메모장 기능이 필요하다고 판단되어 추가할 계획이다.

완료.

3. 암호 알고리즘 확장
향후 다양한 암호 알고리즘을 선택해 사용할 수 있도록
알고리즘 추가 기능도 함께 개발할 예정이다.

해시 MD5 추가.
대칭키 ChaCha20 추가.

ChaCha20은 대칭키 암호이기 때문에 "복호화를 위해 반드시 같은 키와 nonce(초기값)"가 필요합니다.
즉, 키를 입력하지 않으면 복호화 불가능합니다.

필요한 것:
32바이트(256비트) 비밀 키
16바이트(128비트) nonce (IV, 초기화 벡터)

지금 구현한 방식:
현재 코드는 키와 nonce를 매번 랜덤 생성하고,
암호문 앞에 붙여서 base64로 인코딩해 전달합니다.

암호문 = base64encode(nonce + key + 암호데이터)
→ 그래서 사용자는 키를 따로 입력하지 않아도 됩니다.
→ 단점은: 암호문에 키를 포함하므로 보안성이 떨어집니다 (연습용/비교용엔 OK).

지금 구조의 핵심 문제는 암호화할 때 key를 항상 combined에 포함시키고 있는데, 복호화할 때 사용자가 key를 직접 입력한 경우 그걸 무시하지 않고 사용하려 한다는 점이에요. 하지만 이럴 경우 암호화에 사용한 key와 입력한 key가 다르면 무조건 복호화 실패가 발생합니다.

암호화할 때는:
사용자가 키를 입력하면 그걸 사용하고, 포함하지 않음.
사용자가 키를 입력하지 않으면 자동 생성하고, 복호화할 수 있도록 key를 포함함.

복호화할 때는:
사용자가 키를 입력하면 그걸 사용.
입력 안 했으면 암호문에서 key를 추출.



추가 암호화 알고리즘(예정)
'Twofish' 
(PyCryptodome 같은 일반적인 Python 암호화 라이브러리는 Twofish를 기본 지원하지 않습니다.
대신, twofish라는 별도의 라이브러리를 설치해서 사용해야 합니다.)

비대칭키 암호화
'ECC' (타원 곡선 암호)
(보류. 서명기능으로 만들어야되는데 까다로움.)

'ElGamal'
구현 방법 개요 (Python 기준)
Python에서는 일반적으로 PyCryptodome이 ElGamal을 지원하지 않기 때문에
ElGamal을 쓰려면 다음 중 하나가 필요합니다:

🔧 1. pycryptodome의 실험적 ElGamal (비공식 기능, 권장되지 않음)
python
복사
편집
from Crypto.PublicKey import ElGamal
대부분 설치된 PyCryptodome에는 ElGamal이 비활성화되어 있음

🔧 2. python-gnupg + GnuPG 사용
GPG를 통해 ElGamal 키쌍을 만들고 암호화/복호화 수행

단점: 외부 명령어(GPG CLI) 필요. 모바일에서는 어렵다.

🔧 3. 직접 수학적으로 구현
소수, 원시근 생성 → 공개키/개인키 생성 → 암호화/복호화

장점: 모든 환경에서 사용 가능
단점: 구현 복잡, 처리 속도 느림


고전 암호
'Playfair'
'Rail Fence' (레일펜스 암호)
'Atbash' (고대 히브리 암호)


오후 6:48 2025-05-06(화)
신버전 테스트. 개선점 3가지.
1. 메모장 제목이랑 내용 입력칸 글자가 작다. 
font_size=sp(22) 
해결완료?

2. 뒤로가기 버튼 누르면 앱이 나가진다. 
(휴대폰의 뒤로가기 버튼을 눌렀을 때 앱이 곧바로 종료되는 문제는 Kivy 앱에서 Android의 기본 동작을 따르기 때문입니다. 하지만 Kivy에서는 on_back_button 콜백을 오버라이드해서 이 동작을 사용자 정의할 수 있습니다.)
해결완료?

3. 암호들 소개 페이지 추가할까?

-----

베포에 올릴때, abb와 apk를 동시에 빌드해서 apk 테스트 확인하고 올릴것.
베포 올린게 크래시나서 먹통됬다. 

build.gradle에
    buildTypes {
        release {
            minifyEnabled false      // 코드 난독화 설정
            shrinkResources false    // 리소스 축소
            debuggable false        // 디버그 기능 비활성화
            signingConfig signingConfigs.release  // 서명 설정 연결
        }
        debug {
            debuggable false         // 디버그 빌드에서는 디버그 가능 설정
        }
    }

이부분이 문제였던것같다. 
코드 난독화 설정, 리소스 축소가 true면 로그도 제한적으로 보이고 앱을 켜자마자 바로 꺼지는 크래시 발생.

해결완료. 베포버전이 무사히 작동되는걸 확인했다. 

개선사항 
1. 암호 소개 페이지 추가. 
2. 메모장 암호화해서 보안 메모장으로 만들기.


2025-05-17(토)
메모장 내용이 길어지면 (TextInput)메모장이 키보드에 가려지는 문제
ScrollView로 감싸기
self.memo_input을 ScrollView 안에 넣으면, 텍스트가 길어지거나 키보드가 올라올 때 자동으로 스크롤되어 사용자 입력이 가려지지 않게 됩니다.

메모정렬기능, 새 메모 생성 시 중복 방지

메모장 저장할때 암호화하기.
Fernet 암호화로 암복호화 수행. 

Fernet은 Python에서 가장 간단하면서도 안전하게 쓸 수 있는 암호화 방식 중 하나입니다. cryptography 라이브러리에 포함되어 있으며, AES 128 암호화 + HMAC 서명을 자동으로 처리해주는 도구예요.

여기까지 빌드해서 테스트 해보고 암호화 알고리즘들을 설명하는 화면을 하나 만들어보자. 
테스트 완료. 
오류없이 잘되긴 하는데 3번째 버튼 암호데이터보기 글자가 버튼밖으로 나감. 4글자까지만 안나가고 들어갈듯함. 
그리고 메모 칠때 엔터누르면 키보드 아래로 내려가서 못보는 현상도 마찬가지고 

10줄이상 메모장 입력시 
커서가 키보드 아래로 내려가는 문제

거의 다 됬다. 
커서가 키보드 위쪽으로 잘 따라오는데. 
메모장 마지막 줄일 경우엔 스크롤 공간이 없어서 스크롤을 땡겨도 키보드 아래에 가려진다. 

가짜 여백 만들기?
TextInput의 아래에 "가짜 여백"을 만들어서,
스크롤이 더 가능하도록 공간을 확보해줍니다.

2025-05-20(화)
생각처럼 되지가 않네

비공개테스트는 통과했고 

1. 메모장 오류 등 코드 고치고
2. 소개 페이지같은거 제대로 꾸미고 
3. 외국 다운로드 용으로 언어 영어도 추가해서 넣고 빌드한다음 
4. 프로모션 등록. ㄱㄱ

2025-05-20(화)

메모장 아래까지 메모하다가 위로 올리면 맨 윗줄이 잘려서 안보이는 문제

문제 재정의
✅ 메모장 내부에 글이 많을 때
✅ 사용자가 위로 스크롤을 하면
❌ 맨 윗줄(첫 줄)이 잘려서 반쯤만 보이거나, 아예 안 보임

이건 ScrollView + TextInput 조합의 시각적 렌더링 문제이며,
TextInput의 padding_y가 정상 작동하지 않거나,
Kivy 내부적으로 첫 줄 높이를 정확히 반영하지 못하기 때문에 생깁니다.

textinput에 상단 패딩을 강제로 추가.
padding_y=[dp(10), dp(10)],          # 상단/하단 padding 명시적으로 설정

해결. 

_, cursor_y = ti.cursor_pos는 파이썬의 튜플 언패킹(tuple unpacking) 문법입니다.

ti.cursor_pos  # 예: (x, y)
TextInput.cursor_pos는 커서의 x, y 좌표를 튜플로 반환합니다.
예를 들면 (150, 480) 같은 값이죠.
x, y = ti.cursor_pos
이렇게 쓰면 x에 150, y에 480이 들어갑니다.
_, cursor_y = ti.cursor_pos
항목	의미
_	x값은 무시하겠다는 뜻 (관례적 변수명)
cursor_y	y값만 필요하니까 이 변수에만 담음
파이썬에서는 필요 없는 값은 _로 받아서 버리는 관습이 있습니다.
_(언더스코어,밑줄 변수)

스크롤 맞추는 조건.
터치해서 커서를 잡을때 스크롤 작동 
+ 엔터도 조건으로 추가하자. 

if cursor_y < 키보드 위 경계선:
    # 커서가 아래에 있으므로 → 아래로 스크롤
else:
    # 커서는 충분히 위에 있으므로 → 스크롤 안 함

엔터를 치고 위로 올려보면 첫줄이 안보이고 
글자를 치고 위로 올려보면 첫줄이 보인다. 

해결!
높이확장 + 스크롤 보정으로 나름 만족스러운 메모장이 완성됬다. 

해외에서도 설치하고 이용할수 있게 언어도 설정하자. 

운영체제(OS) 언어 설정 읽기
import locale

lang, encoding = locale.getdefaultlocale()
print(lang)  # 예: 'ko_KR', 'en_US', 'ja_JP' 등

# 언어코드만 떼기
lang_code = lang.split('_')[0] if lang else 'en'  # 기본은 영어


언어설정 완료. 
휴대폰 언어에 따라 한글과 영어로 자동 변환됨.
ko는 한글 나머지는 영어.  

테스트 완료.
다른 화면도 추가하고 빌드해서 프로모션으로 올려보자. 

하드코딩으로 싹 넣었다. 

문제1 : 복사할때 '암호문 : ' 이거까지 복사됨,
f"{...}"를 써야만 self.translations[...] 값을 실제 문자열로 평가해서 얻을 수 있어요.

.replace(prefix, "")는 그 접두어가 있는 경우에만 제거해줍니다.

def copy_to_clipboard(self, instance):
        text = self.encrypted_output.text.replace("{self.translations[self.lang]['text21']}: ", "")
        Clipboard.copy(text)

이걸
def copy_to_clipboard(self, instance):
    prefix = f"{self.translations[self.lang]['text21']}: "
    text = self.encrypted_output.text.replace(prefix, "")
    Clipboard.copy(text)
이렇게 했다. 이래야 replace가 암호문만 복사해준다. 

문제2 : 영어로 언어바꾸고 들어가봤는데 영어로 암호화 화면 들어가면 꺼짐. 한글일땐 멀쩡

메모장도 문제 없다.  한영 모두 잘됨
한글 암호화도 문제 없는데
영어 언어에서 암호화 들어가면 갑자기 꺼짐. 


adb logcat으로 로그 따봄. 

meabi-v7a/build/python-installs/encrycode12/arm64-v8a/kivy/uix/widget.py", line 589, in on_touch_down
05-20 22:27:59.891 11824 11949 I python  :    File "kivy/_event.pyx", line 731, in kivy._event.EventDispatcher.dispatch
05-20 22:27:59.891 11824 11949 I python  :    File "/home/yuuki/lotto_app/.buildozer/android/platform/build-arm64-v8a_armeabi-v7a/build/python-installs/encrycode12/arm64-v8a/kivy/uix/widget.py", line 589, in on_touch_down
05-20 22:27:59.891 11824 11949 I python  :    File "kivy/_event.pyx", line 731, in kivy._event.EventDispatcher.dispatch
05-20 22:27:59.891 11824 11949 I python  :    File "/home/yuuki/lotto_app/.buildozer/android/platform/build-arm64-v8a_armeabi-v7a/build/python-installs/encrycode12/arm64-v8a/kivy/uix/behaviors/button.py", line 151, in on_touch_down
05-20 22:27:59.891 11824 11949 I python  :    File "kivy/_event.pyx", line 727, in kivy._event.EventDispatcher.dispatch
05-20 22:27:59.891 11824 11949 I python  :    File "kivy/_event.pyx", line 1307, in kivy._event.EventObservers.dispatch
05-20 22:27:59.891 11824 11949 I python  :    File "kivy/_event.pyx", line 1231, in kivy._event.EventObservers._dispatch
05-20 22:27:59.892 11824 11949 I python  :    File "/home/yuuki/lotto_app/.buildozer/android/app/main.py", line 143, in show_ad_and_switch1
05-20 22:27:59.892 11824 11949 I python  :    File "/home/yuuki/lotto_app/.buildozer/android/app/main.py", line 1288, in switch_to_screen
05-20 22:27:59.892 11824 11949 I python  :    File "/home/yuuki/lotto_app/.buildozer/android/app/main.py", line 274, in __init__
05-20 22:27:59.892 11824 11949 I python  :  KeyError: '?移?궎 ?뷀샇??
FINDSTR: 쓰기 오류입니다.

algorithm_groups 키가 언어마다 다르게 정의된 경우
앞서 처리한 부분이지만, 예를 들어 다음처럼 고정된 한글 키로 접근하면 영어에서 KeyError 납니다:

짐작가는 부분이 있다. 
self.algo_spinner = Spinner(
            text=self.translations[self.lang]['text2'],
            values=self.algorithm_groups[self.translations['ko']['text30']],
            font_name='Font',
            font_size=sp(20),
            size_hint=(0.5, 1),
            height=dp(50)
        ) 

스피너 언어 바꿀때 키는 달라도 값은 같아서 그냥 한글키 강제로 넣었는데 이것때문인가보다. 
group_key = self.translations[self.lang]['text30']
values=self.algorithm_groups[group_key]

언어대로 바꿨다. 안됨.

아 괄호가 지워졌었네

오전 12:33 2025-05-21(수)

빌드가 또 머리아프게 한다. 

./gradlew bundleRelease 로 빌드했다. 
서명은 따로 했고 
빌드 그래들에서 
    buildTypes {
        debug {
        }
        release {
            debuggable false
        }
    }

디버그 false 한줄 추가. 
전에 며칠동안 빌드해봤는데 난독화나 그런것들 넣으면 바로 앱이 꺼져버려서 다 빼고 저것만 넣는다. 

오류
현재 앱이 31의 API 수준을 타겟팅하고 있지만, 보안 및 성능에 최적화된 최신 API를 기반으로 앱을 빌드하려면 API 수준 34 이상을 타겟팅해야 합니다. 자세히 알아보기

아까 클린써서 그래들 초기화된거같다. 
다시 34로 올리고 클린 후 빌드

성공. 이제 검토만 기다리면 앱이 스토어에 올라가게 된다. 
스토어 올라가면 품앗이한 카페 가서 이제 비공개 통과했으니 삭제해도 된다고 게시글 올리고 
