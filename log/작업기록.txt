드디어 앱을 스토어에 업로드했다.
앱을 올리려고 시도하는 동안 오류를 해결하는 게 정말 쉽지 않았다.
서명이 없다는 오류는 키 파일을 직접 만들어 서명하니 금방 해결됐지만,
버전이 맞지 않다는 오류는 정말 고생을 많이 했다.
설정에서 아무리 바꿔도 빌드할 때마다 API 31로 바뀌어서 시간을 많이 허비했다.
빌드를 초기화하고 다시 하면 기본 20분은 걸리는데, 네트워크 오류까지 나면 더 오래 걸렸다.
우여곡절 끝에 결국 모든 문제를 해결하고 무사히 앱을 업로드할 수 있었다.

버튼에 전면 광고를 넣었는데, 누를 때마다 강제로 동영상 광고가 재생돼서 매우 불쾌했다.
심지어 닫기 버튼(X)도 없어서 끝까지 억지로 봐야만 했다.
내가 원했던 방식은 이미지 광고가 뜨고, 오른쪽 위에 X 버튼을 눌러 닫을 수 있는 형태였다.

광고 단위 설정에서 광고 유형을 선택할 수 있다는 걸 알게 됐다.
동영상 항목의 체크를 해제하니, 내가 원했던 이미지 광고가 제대로 나왔다.

비공개 테스트를 진행해야 해서 광고 노출 빈도를 ‘하루 1회’로 설정했다.

현재는 카페에 게시글을 올려 테스터를 모으는 중이다.
대행 업체가 5만 원에 대신 해주는 서비스도 있다는데, 왜 이렇게 복잡하게 만들어놨는지 모르겠다.
게다가 14일 동안 매일 한 번씩 접속해야 한다니 참 번거롭다.
혹시 모를 상황을 대비해서 20명보다 더 많은 테스터를 모집해두는 게 좋겠다.

----------

안녕하세요. 품앗이 신청합니다! 
제 이메일 추가해주시면 바로 설치하겠습니다.

Android : https://play.google.com/store/apps/details?id=org.encrycode.encrycode
웹 : https://play.google.com/apps/testing/org.encrycode.encrycode
이메일 : junwonchoe154@gmail.com

----------
2025-05-02(금)
평문,암호문 입력창이 칸 여유가 있는데도 한줄로만 나오는 문제.

광고+ 주석x 버전은 pc에서 하기 어려워서 일반 버전으로 수정하고 이식할 예정. 
해결 완료. 

TextInput 속성
multiline=false를 multiline=True        # 여러 줄 입력 가능
로 수정하면 된다.

이식완료.
----------
개선사항 

1. 로비 화면 개선
현재 로비 화면이 너무 휑하다.
로비 이미지 추가를 고려 중이며,
기존 ‘비밀 해독기’ 로고를 ‘암호 해독기’로 바꿀까 고민했지만,
결국 ‘비밀 해독기’가 더 멋있어서 그대로 사용하기로 했다.
다만 이미지의 배경색이 전체 배경과 완전히 어울리지는 않지만,
우선 APK로 빌드해 모바일 환경에서 직접 확인해볼 예정이다.

완료.

2. 메모장 기능 추가
암호화한 내용을 기록하거나, 적의 정보를 메모할 수 있는
메모장 기능이 필요하다고 판단되어 추가할 계획이다.

완료.

3. 암호 알고리즘 확장
향후 다양한 암호 알고리즘을 선택해 사용할 수 있도록
알고리즘 추가 기능도 함께 개발할 예정이다.

해시 MD5 추가.
대칭키 ChaCha20 추가.

ChaCha20은 대칭키 암호이기 때문에 "복호화를 위해 반드시 같은 키와 nonce(초기값)"가 필요합니다.
즉, 키를 입력하지 않으면 복호화 불가능합니다.

필요한 것:
32바이트(256비트) 비밀 키
16바이트(128비트) nonce (IV, 초기화 벡터)

지금 구현한 방식:
현재 코드는 키와 nonce를 매번 랜덤 생성하고,
암호문 앞에 붙여서 base64로 인코딩해 전달합니다.

암호문 = base64encode(nonce + key + 암호데이터)
→ 그래서 사용자는 키를 따로 입력하지 않아도 됩니다.
→ 단점은: 암호문에 키를 포함하므로 보안성이 떨어집니다 (연습용/비교용엔 OK).

지금 구조의 핵심 문제는 암호화할 때 key를 항상 combined에 포함시키고 있는데, 복호화할 때 사용자가 key를 직접 입력한 경우 그걸 무시하지 않고 사용하려 한다는 점이에요. 하지만 이럴 경우 암호화에 사용한 key와 입력한 key가 다르면 무조건 복호화 실패가 발생합니다.

암호화할 때는:
사용자가 키를 입력하면 그걸 사용하고, 포함하지 않음.
사용자가 키를 입력하지 않으면 자동 생성하고, 복호화할 수 있도록 key를 포함함.

복호화할 때는:
사용자가 키를 입력하면 그걸 사용.
입력 안 했으면 암호문에서 key를 추출.



추가 암호화 알고리즘(예정)
'Twofish' 
(PyCryptodome 같은 일반적인 Python 암호화 라이브러리는 Twofish를 기본 지원하지 않습니다.
대신, twofish라는 별도의 라이브러리를 설치해서 사용해야 합니다.)

비대칭키 암호화
'ECC' (타원 곡선 암호)
(보류. 서명기능으로 만들어야되는데 까다로움.)

'ElGamal'
구현 방법 개요 (Python 기준)
Python에서는 일반적으로 PyCryptodome이 ElGamal을 지원하지 않기 때문에
ElGamal을 쓰려면 다음 중 하나가 필요합니다:

🔧 1. pycryptodome의 실험적 ElGamal (비공식 기능, 권장되지 않음)
python
복사
편집
from Crypto.PublicKey import ElGamal
대부분 설치된 PyCryptodome에는 ElGamal이 비활성화되어 있음

🔧 2. python-gnupg + GnuPG 사용
GPG를 통해 ElGamal 키쌍을 만들고 암호화/복호화 수행

단점: 외부 명령어(GPG CLI) 필요. 모바일에서는 어렵다.

🔧 3. 직접 수학적으로 구현
소수, 원시근 생성 → 공개키/개인키 생성 → 암호화/복호화

장점: 모든 환경에서 사용 가능
단점: 구현 복잡, 처리 속도 느림


고전 암호
'Playfair'
'Rail Fence' (레일펜스 암호)
'Atbash' (고대 히브리 암호)


오후 6:48 2025-05-06(화)
신버전 테스트. 개선점 3가지.
1. 메모장 제목이랑 내용 입력칸 글자가 작다. 
font_size=sp(22) 
해결완료?

2. 뒤로가기 버튼 누르면 앱이 나가진다. 
(휴대폰의 뒤로가기 버튼을 눌렀을 때 앱이 곧바로 종료되는 문제는 Kivy 앱에서 Android의 기본 동작을 따르기 때문입니다. 하지만 Kivy에서는 on_back_button 콜백을 오버라이드해서 이 동작을 사용자 정의할 수 있습니다.)
해결완료?

3. 암호들 소개 페이지 추가할까?



